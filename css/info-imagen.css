*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: sans-serif;
}
:root{
    --blue: #262626;
    --dark-blue: #ffffff;
    --grey: #f2f2f2;
    --light-blue: #0079cf;
}
body{
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: url(../images/fondoGeneral.png);
    background-size: cover;
    background-position: center;
    overflow: hidden;
}
.container{
    max-width: 500px;
    width: 100%;
    background: transparent;
    border: 2px solid rgba(255, 255, 255, .2);
    backdrop-filter: blur(30px);
    color: rgba(255, 255, 255, 0.791);
    border-radius: 12px;
    padding: 50px 40px 30px;
    margin: 50px 0 50px 0;
}
.img-area{
    position: relative;
    width: 100%;
    height: 240px;
    border: 2px dashed rgba(255, 255, 255, 0.378);
    margin-bottom: 30px;
    border-radius: 15px;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}


.img-area .icon{
    font-size: 100px;
}
.img-area h3{
    font-size: 20px;
    font-weight: 500;
    margin-bottom: 6px;
}
.img-area p{
    color: #a4a4a4;
    margin: 0 20px ;
}
.img-area span{
    font-weight: 600px;
}
.img-area i{
    font-size: 100px;
}
.img-area img{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    z-index: 100;
}
.select-image{
font-weight: 600;
color: #ffffff;
cursor: pointer;
}
.name-container {
    display: flex;
    justify-content: space-between;
}
.info{
    width: 49%;
    height: 50px;
    background: transparent;
    border: none;
    outline: none;
    border: 2px solid rgba(255, 255, 255, 0.378);
    border-radius: 40px;
    font-size: 15px;
    color: rgba(255, 255, 255, 0.378);
    font-weight: 550;
    padding: 0 20px;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    position: relative;
    margin: 10px 0;
    display: flex;
}
.info::placeholder{
    color: rgba(255, 255, 255, 0.378) ;
    font-weight: 550;
}
.subir{
    display: block;
    width: 100%;
    padding: 16px 0;
    border-radius: 50px;
    background: #eeeeee;
    color: var(--blue);
    font-weight: 700;
    font-size: 16px;
    border: none;
    cursor: pointer;
    transition: all .3s ease;
}


.input-box input{
    width: 100%;
    height: 100%;
    background: transparent;
    border: none;
    outline: none;
    border: 2px solid rgba(255, 255, 255, .2);
    border-radius: 40px;
    font-size: 16px;
    color: #fff;
    padding: 15px 45px 15px 20px;
    display: flex;
}
.input-box input::placeholder{
    color: #dadada;
    font-weight: 550s;
}
.input-box i{
    position: absolute;
    right: 20px;
    top: 30%;
    transform: translate(-50%);
    font-size: 20px;
}
.flex-container {
    display: flex;
    justify-content: space-between;
    gap: 15px;
    margin-bottom: 20px;
}

.half-width {
    width: 48%;
}

h1{
    margin-bottom: 30px;
    font-size: 29px
}

button.sparkle-button{
    width: 100%;
    height: 100%;
    background: #ffffff;
    border: none;
    outline: none;
    border: 2px solid rgba(255, 255, 255, .2);
    border-radius: 40px;
    font-size: 18px;
    color: #000;
    font-weight: bold;
    padding: 15px 45px 15px 20px;
    display: flex; 
    justify-content: center;
    cursor: pointer;
}



/* From Uiverse.io by JkHuger */ 
.sparkle-button {
    --active: 0;
    --bg: white; /* Fondo inicial blanco */
    background: var(--bg);
    font-size: 1.2rem;
    font-weight: 500;
    border: 0;
    cursor: pointer;
    padding: 1em 1em;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5em;
    white-space: nowrap;
    border-radius: 100px;
    position: relative;
    box-shadow: 0 0 calc(var(--active) * 3em) calc(var(--active) * 1em) hsl(260 97% 61% / 0.75),
          0 0em 0 0 hsl(260 calc(var(--active) * 97%) calc((var(--active) * 50%) + 30%)) inset,
          0 -0.05em 0 0 hsl(260 calc(var(--active) * 97%) calc(var(--active) * 60%)) inset;
    transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
    scale: calc(1 + (var(--active) * 0.1));
    transition: .3s;
    width: 100%;
    color: black; /* Texto negro inicialmente */
  }
  
  /* Cambia el fondo y el color del texto cuando se haga hover o focus */
  .sparkle-button:is(:hover, :focus-visible) {
    --bg: radial-gradient(
              40% 50% at center 100%,
              hsl(270 calc(var(--active) * 97%) 72% / var(--active)),
              transparent
          ),
          radial-gradient(
              80% 100% at center 120%,
              hsl(260 calc(var(--active) * 97%) 70% / var(--active)),
              transparent
          ),
          hsl(260 calc(var(--active) * 97%) calc((var(--active) * 44%) + 12%)); /* Fondo violeta */
    background: var(--bg); /* Aplica el degradado violeta en hover */
    color: white; /* Texto blanco cuando el botón está activo */
  }
  
  .text {
    translate: 2% -6%;
    letter-spacing: 0.01ch;
    background: none; /* Sin gradiente inicial en el texto */
    color: black; /* Color del texto negro inicialmente */
    transition: background var(--transition), color var(--transition);
  }
  
  /* Cambia el color del texto a blanco en hover */
  .sparkle-button:is(:hover, :focus-visible) .text {
    color: white;
  }
    .sparkle-button:active {
      scale: 1;
      transition: .3s;
    }
    
    .sparkle path {
      color: hsl(0 0% calc((var(--active, 0) * 70%) + var(--base)));
      transform-box: fill-box;
      transform-origin: center;
      fill: currentColor;
      stroke: currentColor;
      animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
      animation-duration: 0.6s;
      transition: color var(--transition);
    }
    
    .sparkle-button:is(:hover, :focus-visible) path {
      animation-name: bounce;
    }
    
    @keyframes bounce {
      35%, 65% {
        scale: var(--scale);
      }
    }
    
    .sparkle path:nth-of-type(1) {
      --scale: 0.5;
      --delay: 0.1;
      --base: 40%;
    }
    
    .sparkle path:nth-of-type(2) {
      --scale: 1.5;
      --delay: 0.2;
      --base: 20%;
    }
    
    .sparkle path:nth-of-type(3) {
      --scale: 2.5;
      --delay: 0.35;
      --base: 30%;
    }
    
    .sparkle-button:before {
      content: "";
      position: absolute;
      inset: -0.2em;
      z-index: -1;
      border: 0.25em solid hsl(260 97% 50% / 0.5);
      border-radius: 100px;
      opacity: var(--active, 0);
      transition: opacity var(--transition);
    }
    
    .spark {
      position: absolute;
      inset: 0;
      border-radius: 100px;
      rotate: 0deg;
      overflow: hidden;
      mask: linear-gradient(white, transparent 50%);
      animation: flip calc(var(--spark) * 2) infinite steps(2, end);
      
    }
    
    @keyframes flip {
      to {
        rotate: 360deg;
      }
    }
    
    .spark:before {
      content: "";
      position: absolute;
      width: 200%;
      aspect-ratio: 1;
      top: 0%;
      left: 50%;
      z-index: -1;
      translate: -50% -15%;
      rotate: 0;
      transform: rotate(-90deg);
      opacity: calc((var(--active)) + 0.4);
      background: conic-gradient(
            from 0deg,
            transparent 0 340deg,
            white 360deg
        );
      transition: opacity var(--transition);
      animation: rotate var(--spark) linear infinite both;
    }
    
    .spark:after {
      content: "";
      position: absolute;
      inset: var(--cut);
      border-radius: 100px;
    }
    
    .backdrop {
      position: absolute;
      inset: var(--cut);
      background: var(--bg);
      border-radius: 100px;
      transition: background var(--transition);
    }
    
    @keyframes rotate {
      to {
        transform: rotate(90deg);
      }
    }
    
    @supports(selector(:has(:is(+ *)))) {
      body:has(button:is(:hover, :focus-visible)) {
        --active: 1;
        --play-state: running;
      }
    
      .bodydrop {
        display: none;
      }
    }
    
    .sparkle-button:is(:hover, :focus-visible) ~ :is(.bodydrop, .particle-pen) {
      --active: 1;
      --play-state: runnin;
    }
    
    .sparkle-button:is(:hover, :focus-visible) {
      --active: 1;
      --play-state: running;
    }
    
    .sp {
      position: relative;
    }
    
    .particle-pen {
      position: absolute;
      width: 200%;
      aspect-ratio: 1;
      top: 50%;
      left: 50%;
      translate: -50% -50%;
      -webkit-mask: radial-gradient(white, transparent 65%);
      z-index: -1;
      opacity: var(--active, 0);
      transition: opacity var(--transition);
    }
    span.text{
      color:#6f6f6f;
    }
    
    .particle {
      fill: white;
      width: calc(var(--size, 0.25) * 1rem);
      aspect-ratio: 1;
      position: absolute;
      top: calc(var(--y) * 1%);
      left: calc(var(--x) * 1%);
      opacity: var(--alpha, 1);
      animation: float-out calc(var(--duration, 1) * 1s) calc(var(--delay) * -1s) infinite linear;
      transform-origin: var(--origin-x, 1000%) var(--origin-y, 1000%);
      z-index: -1;
      animation-play-state: var(--play-state, paused);
    }
    
    .particle path {
      fill: hsl(0 0% 90%);
      stroke: none;
    }
    
    .particle:nth-of-type(even) {
      animation-direction: reverse;
    }
    
    @keyframes float-out {
      to {
        rotate: 360deg;
      }
      }
      
    .text {
      translate: 2% -6%;
      letter-spacing: 0.01ch;
      background: linear-gradient(90deg, hsl(0 0% calc((var(--active) * 100%) + 65%)), hsl(0 0% calc((var(--active) * 100%) + 26%)));
      -webkit-background-clip: text;
      color: transparent;
      transition: background var(--transition);
    }
    
    .sparkle-button svg {
      inline-size: 1.25em;
      translate: -25% -5%;
    }
  
    #response {
      margin-top: 20px;
      font-size: 14px;
      color: #d9534f; /* Color rojo suave para errores */
      text-align: center;
      background-color: #f8d7da; /* Fondo claro para error */
      padding: 10px;
      border-radius: 10px;
      border: 1px solid #f5c6cb; /* Borde más oscuro para el error */
      display: none; /* Para ocultarlo inicialmente */
    }
    
    #response.show {
      display: block;
    }

    .img-area{
        position: relative;
        width: 100%;
        height: 240px;
        border: 2px dashed rgba(255, 255, 255, 0.378);
        margin-bottom: 30px;
        border-radius: 15px;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }
    
    
    .img-area .icon{
        font-size: 100px;
    }
    .img-area h3{
        font-size: 20px;
        font-weight: 500;
        margin-bottom: 6px;
    }
    .img-area p{
        color: #a4a4a4;
        margin: 0 20px ;
    }
    .img-area span{
        font-weight: 600px;
    }
    .img-area i{
        font-size: 100px;
    }
    .img-area img{
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
        z-index: 100;
    }
    .select-image{
    font-weight: 600;
    color: #ffffff;
    cursor: pointer;
    }
    .name-container {
        display: flex;
        justify-content: space-between;
    }
    .info{
        width: 49%;
        height: 50px;
        background: transparent;
        border: none;
        outline: none;
        border: 2px solid rgba(255, 255, 255, 0.378);
        border-radius: 40px;
        font-size: 15px;
        color: rgba(255, 255, 255, 0.378);
        font-weight: 550;
        padding: 0 20px;
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        position: relative;
        margin: 10px 0;
        display: flex;
    }
    .info::placeholder{
        color: rgba(255, 255, 255, 0.378) ;
        font-weight: 550;
    }   

    .bx-chevron-left {
      color: #fff;
      position: absolute;
      font-size: 70px;
      left: 2%;
      top: 2%;
      cursor: pointer;
    }

    .bx-chevron-left:hover{
      color: #dadada;
      transition: 0.5s;
    }


    
.container-loader {
  position: relative; /* Contenedor para el loader y el número */
  text-align: center; /* Centra el texto horizontalmente */
  position: absolute;
  top: 20%;
  background-color: #e7e7e7;
  width: 100em;
  height: 100em;
  top: -30%;
  left: -110%;
  z-index: 100000;
}

.loader {
  transform: rotateX(70deg);
  position: absolute;
  left: 41%;
  top: 15%;
}

.loader .element {
  display: flex;
  border-left: 5px solid rgb(120, 47, 255);
  border-right: 5px solid rgb(120, 47, 255);
  border-top: dotted 2px rgb(92, 5, 114);
  width: 10rem;
  height: 1rem;
  margin: 0.5rem;
  perspective: 1000px;
  animation: rotate 5s infinite linear;
  animation-delay: calc(var(--i) * 0.2s);
  left: -10%;
}

@keyframes rotate {
  100% {
      transform: rotateY(360deg);
  }
}

#number {
  margin-top: 250px; /* Espacio entre el loader y el número (ajustar este valor) */
  top: 16%;
  position: absolute;
  left: 45%;
}

#number h1 {
  font-weight: 600;
  color: #7c3ed6;
  font-size: 1.5rem; /* Tamaño del texto (ajustar este valor si es necesario) */
  margin: 0; /* Elimina el margen por defecto del h1 */
}

#response {
  margin: 20px 0;
  font-size: 14px;
  color: #d9534f; /* Color rojo suave para errores */
  text-align: center;
  background-color: #f8d7da; /* Fondo claro para error */
  padding: 20px;
  border-radius: 10px;
  border: 1px solid #f5c6cb; /* Borde más oscuro para el error */
  display: none; /* Para ocultarlo inicialmente */
}

#response.show {
  display: block;
}

.bx.bx-reset{
  position: absolute;
  left: 91%;
  top: 3%;
  color: #e0e0e0;
  font-size: 30px;
  cursor: pointer;
}

.bx.bx-reset:hover{
  color: #fff;
}